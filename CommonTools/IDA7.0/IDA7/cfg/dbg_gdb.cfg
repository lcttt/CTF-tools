
// Maximum packet size supported by remote stub (-1=try to autodetect)

MAXPACKETSIZE = 512


// Default timeout for remote GDB stub responses (milliseconds)

REMOTE_TIMEOUT = 1000

// The following stub options exist:
#define STUB_OPTS_STEP       0x0001 // use stub's support for single-stepping, if available
#define STUB_OPTS_SWBP_PLUS1 0x0002 // (x86 only) stub reports software breakpoints one
                                    // byte later than the actual address
#define STUB_OPTS_USE_CSIP   0x0004 // (x86 only) stub returns only 16 bits of the linear EIP
                                    // when in real mode, so we need to add CS<<4 to it
#define STUB_OPTS_NOACK_MODE 0x0008 // enable no-acknowledgment mode if supported
                                    // (for reliable connections)

// STUB_OPTIONS = ?

// Run an external debugger before starting the debugger
// see gdb_arch.cfg for details

// EXT_CMDLINE = "qemu-system-arm -s -S -p -kernel \"%e\" -M versatilepb"; //NB: semicolon is mandatory!
// EXT_INITSP = 0x08000000

// copied from idp.hpp
#define PLFM_386         0        ///< Intel 80x86 (and x86_64/AMD64)
#define PLFM_MIPS       12        ///< MIPS
#define PLFM_ARM        13        ///< ARM (also includes AArch64)
#define PLFM_PPC        15        ///< PowerPC
#define PLFM_SH         18        ///< Renesas (formerly Hitachi) SuperH

// format of the entries:
// "architecture name":
//  [
//    <IDA Platform ID>,
//    <user description>,
//    <0 for little-endian/1 for big-endian>,
//    <address size>,
//    <IDA processor name>,
//    <root XML file name with register layout>,
//    <core feature name in the XML description>,
//    <name of the program counter register in the description>,
//    <hex bytes of the software breakpoint instruction>
//  ],

ARCH_MAP =
{
  // archictecture     platform id      description   bigendian addrsize processor       xmlfile                  feature name                 regname softbpt
  "i386":             [ PLFM_386,  "Intel x86",               0, 4,      "metapc",       "i386-avx.xml",          "org.gnu.gdb.i386.core",     "eip",  "CC"       ],
  "i386:x86-64":      [ PLFM_386,  "Intel x64",               0, 8,      "metapc",       "amd64-avx.xml",         "org.gnu.gdb.i386.core",     "rip",  "CC"       ],
  "arm":              [ PLFM_ARM,  "ARM Little-endian",       0, 4,      "arm",          "arm-with-neon.xml",     "org.gnu.gdb.arm.core",      "pc",   "FEDEFFE7" ],
  "arm":              [ PLFM_ARM,  "ARM Big-endian",          1, 4,      "armb",         "arm-with-neon.xml",     "org.gnu.gdb.arm.core",      "pc",   "E7FFDEFE" ],
  "arm":              [ PLFM_ARM,  "ARM (M profile)",         0, 4,      "arm:ARMv7-ME", "arm-with-m.xml",        "org.gnu.gdb.arm.m-profile", "xpsr", "01DE"     ],
  "arm64":            [ PLFM_ARM,  "ARM64 (Aarch64)",         0, 8,      "arm",          "aarch64.xml",           "org.gnu.gdb.arm.core",      "xpc",  "D4200020" ],
  "arm":              [ PLFM_ARM,  "ARM (banked)",            0, 4,      "arm",          "arm-with-banked.xml",   "net.sourceforge.openocd.banked", "pc",   "FEDEFFE7" ],
  "powerpc:common":   [ PLFM_PPC,  "PowerPC Little-endian",   0, 4,      "ppc",          "powerpc-32.xml",        "org.gnu.gdb.power.core",    "pc",   "0800E07F" ],
  "powerpc:common":   [ PLFM_PPC,  "PowerPC Big-endian",      1, 4,      "ppc",          "powerpc-32.xml",        "org.gnu.gdb.power.core",    "pc",   "7FE00008" ],
  "powerpc:common64": [ PLFM_PPC,  "PowerPC64 Little-endian", 0, 8,      "ppc",          "powerpc-altivec64.xml", "org.gnu.gdb.power.core",    "pc",   ""         ],
  "powerpc:common64": [ PLFM_PPC,  "PowerPC64 Big-endian",    1, 8,      "ppc",          "powerpc-altivec64.xml", "org.gnu.gdb.power.core",    "pc",   ""         ],
  "mips":             [ PLFM_MIPS, "MIPS Big-endian",         1, 4,      "mipsb",        "mips-linux.xml",        "org.gnu.gdb.mips.cpu",      "pc",   "0005000d" ],
  "mips":             [ PLFM_MIPS, "MIPS Little-endian",      0, 4,      "mipsl",        "mips-linux.xml",        "org.gnu.gdb.mips.cpu",      "pc",   "0d000500" ],
  "mips":             [ PLFM_MIPS, "MIPS64 Big-endian",       1, 8,      "mipsb",        "mips64-linux.xml",      "org.gnu.gdb.mips.cpu",      "pc",   "0005000d" ],
  "mips":             [ PLFM_MIPS, "MIPS64 Little-endian",    0, 8,      "mipsl",        "mips64-linux.xml",      "org.gnu.gdb.mips.cpu",      "pc",   "0d000500" ],
  "sh3":              [ PLFM_SH,   "SH3 Big-endian",          1, 4,      "sh3b",         "sh3.xml",               "org.gnu.gdb.sh.cpu",        "pc",   "C320"     ],
  "sh3":              [ PLFM_SH,   "SH3 Little-endian",       0, 4,      "sh3",          "sh3.xml",               "org.gnu.gdb.sh.cpu",        "pc",   "20C3"     ]
}
#ifndef __IDB__
// Default processor module to load for instant debugging (without database)
DEFAULT_CPU = PLFM_386
#endif

