
// Maximum packet size supported by remote stub (-1=try to autodetect)

MAXPACKETSIZE = 512


// Default timeout for remote iOS stub responses (milliseconds)

REMOTE_TIMEOUT = 1000


// Path to local iOS symbol cache.
// Assuming that you have already allowed Xcode to pull these symbols off of your device,
// specify the path here to allow for faster and more detailed debugging.
//
// These symbols are usually located in:
//    /Developer/Platforms/iPhoneOS.platform/DeviceSupport/<iOS version>/Symbols
// or possibly:
//    ~/Library/Developer/Xcode/iOS DeviceSupport/<iOS version>/Symbols

SYMBOL_PATH = "";


// Instruct the debugserver to print extra messages to the iOS system log.
// The string should be formatted something like this:
//
//    SYSLOG_FLAGS = "LOG_PROCESS|LOG_THREAD|LOG_EXCEPTIONS";
//
// For a list of all available options see set_logging() in RNBRemote.cpp in the lldb source.
// You must use a third-party tool to retrieve the iOS syslog.

SYSLOG_FLAGS = "";


#ifdef __MAC__

// Launch the debugserver automatically. This option is only available on Mac.
//
// When AUTOLAUNCH is YES, IDA will connect to an iOS device, launch the debugserver on it,
// and automatically start a debugging session.
//
// If you don't want IDA to launch the debugserver automatically, set this option to NO.
// IDA will then connect to a running debugserver via 'hostname' and 'port' in the
// Process Options dialog.

AUTOLAUNCH = YES


// Unique ID of the device IDA will use when debugging. This option is only available on Mac.
//
// For example, if AUTOLAUNCH = YES, IDA will try to find a connected device with the given device ID,
// and start a debugging session on this device. The target device can be also be specified in
// menu Debugger->Debugger options->Set specific options.
//
// If AUTOLAUNCH = NO, this ID will still be used for operations like attaching to a process -
// the list of running applications will be retrieved from the device with the given ID.
//
// If this option is not specified and the user has not specified the target device in
// the debugger specific options, IDA will simply use the first device it finds.

DEVICE_ID = "";

#endif


// copied from idp.hpp
#define PLFM_ARM        13        ///< Advanced RISC Machines

// format of the entries:
// "architecture name":
//  [
//    <IDA Platform ID>,
//    <user description>,
//    <0 for little-endian/1 for big-endian>,
//    <address size>,
//    <IDA processor name>,
//    <root XML file name with register layout>,
//    <core feature name in the XML description>,
//    <name of the program counter register in the description>,
//    <hex bytes of the software breakpoint instruction>
//  ],

ARCH_MAP =
{
  // archictecture     platform id      description   bigendian addrsize processor xmlfile                   feature name          regname   softbpt
  "arm":              [ PLFM_ARM,  "ARM Little-endian",       0, 4 ,     "arm",    "ios-arm.xml",    "com.apple.debugserver.arm.general",   "pc",  "FEDEFFE7" ],
  "arm64":            [ PLFM_ARM,  "ARM64 (Aarch64)",         0, 8 ,     "arm",    "ios-arm64.xml",  "com.apple.debugserver.arm64.general", "xpc", "D4200020" ]
}

#ifndef __IDB__
// Default processor module to load for instant debugging (without database)
DEFAULT_CPU = PLFM_ARM
#endif
